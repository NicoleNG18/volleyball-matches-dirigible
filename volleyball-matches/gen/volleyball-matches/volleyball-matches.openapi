openapi: 3.0.3
info:
  title: Matches score - OpenAPI 3.0
  version: 1.0.0
  description: Volleyball matches score
externalDocs:
  description: Find out more about Eclipse Dirigible
  url: https://dirigible.io
servers:
  - url: /services/ts
tags:
  - name: League
  - name: Teams
  - name: Players
  - name: Matches
  - name: Coaches
paths:
  /volleyball-matches/gen/volleyball-matches/api/League/LeagueService.ts:
    get:
      summary: List League
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - League
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/League'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create League
      tags:
        - League
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/League'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /volleyball-matches/gen/volleyball-matches/api/League/LeagueService.ts/{id}:
    get:
      summary: Get League by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - League
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/League'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update League by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - League
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/League'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete League by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - League
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /volleyball-matches/gen/volleyball-matches/api/League/LeagueService.ts/count:
    get:
      summary: Count the number of League
      tags:
        - League
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of League by LeagueFilterOptions
      tags:
        - League
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeagueFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /volleyball-matches/gen/volleyball-matches/api/League/LeagueService.ts/search:
    post:
      summary: Search League by LeagueFilterOptions
      tags:
        - League
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeagueFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/League'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /volleyball-matches/gen/volleyball-matches/api/Teams/TeamService.ts:
    get:
      summary: List Team
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Teams
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Team'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create Team
      tags:
        - Teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /volleyball-matches/gen/volleyball-matches/api/Teams/TeamService.ts/{id}:
    get:
      summary: Get Team by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Teams
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Team'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update Team by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Team by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Teams
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /volleyball-matches/gen/volleyball-matches/api/Teams/TeamService.ts/count:
    get:
      summary: Count the number of Team
      tags:
        - Teams
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of Team by TeamFilterOptions
      tags:
        - Teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /volleyball-matches/gen/volleyball-matches/api/Teams/TeamService.ts/search:
    post:
      summary: Search Team by TeamFilterOptions
      tags:
        - Teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Team'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /volleyball-matches/gen/volleyball-matches/api/Players/PlayerService.ts:
    get:
      summary: List Player
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Players
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Player'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create Player
      tags:
        - Players
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /volleyball-matches/gen/volleyball-matches/api/Players/PlayerService.ts/{id}:
    get:
      summary: Get Player by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Players
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Player'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update Player by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Players
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Player by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Players
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /volleyball-matches/gen/volleyball-matches/api/Players/PlayerService.ts/count:
    get:
      summary: Count the number of Player
      tags:
        - Players
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of Player by PlayerFilterOptions
      tags:
        - Players
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /volleyball-matches/gen/volleyball-matches/api/Players/PlayerService.ts/search:
    post:
      summary: Search Player by PlayerFilterOptions
      tags:
        - Players
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Player'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /volleyball-matches/gen/volleyball-matches/api/Matches/MatchService.ts:
    get:
      summary: List Match
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Matches
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Match'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create Match
      tags:
        - Matches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /volleyball-matches/gen/volleyball-matches/api/Matches/MatchService.ts/{id}:
    get:
      summary: Get Match by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Matches
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Match'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update Match by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Matches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Match by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Matches
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /volleyball-matches/gen/volleyball-matches/api/Matches/MatchService.ts/count:
    get:
      summary: Count the number of Match
      tags:
        - Matches
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of Match by MatchFilterOptions
      tags:
        - Matches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Set1: "abcd"
                      Set2: "abcd"
                      Set3: "abcd"
                      Set4: "abcd"
                      Set5: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Set1: "abcd"
                      Set2: "abcd"
                      Set3: "abcd"
                      Set4: "abcd"
                      Set5: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /volleyball-matches/gen/volleyball-matches/api/Matches/MatchService.ts/search:
    post:
      summary: Search Match by MatchFilterOptions
      tags:
        - Matches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Set1: "abcd"
                      Set2: "abcd"
                      Set3: "abcd"
                      Set4: "abcd"
                      Set5: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Set1: "abcd"
                      Set2: "abcd"
                      Set3: "abcd"
                      Set4: "abcd"
                      Set5: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Match'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /volleyball-matches/gen/volleyball-matches/api/Coaches/CoachService.ts:
    get:
      summary: List Coach
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Coaches
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Coach'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create Coach
      tags:
        - Coaches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coach'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coach'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /volleyball-matches/gen/volleyball-matches/api/Coaches/CoachService.ts/{id}:
    get:
      summary: Get Coach by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Coaches
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Coach'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update Coach by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Coaches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coach'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coach'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Coach by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Coaches
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /volleyball-matches/gen/volleyball-matches/api/Coaches/CoachService.ts/count:
    get:
      summary: Count the number of Coach
      tags:
        - Coaches
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of Coach by CoachFilterOptions
      tags:
        - Coaches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoachFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /volleyball-matches/gen/volleyball-matches/api/Coaches/CoachService.ts/search:
    post:
      summary: Search Coach by CoachFilterOptions
      tags:
        - Coaches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoachFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Coach'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    League:
      type: object
      required:
        - Name
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 50
    LeagueFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 50
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 50
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 50
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 50
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
        $select:
          type: array
          example: ["Id", "Name"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    Team:
      type: object
      required:
        - Name
        - League
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 50
        League:
          type: integer
          format: int32
        Points:
          type: integer
          format: int32
    TeamFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 50
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 50
                League:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Points:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 50
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 50
                League:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Points:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
                League:
                Points:
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
                League:
                  type: integer
                  format: int32
                Points:
                  type: integer
                  format: int32
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
                League:
                  type: integer
                  format: int32
                Points:
                  type: integer
                  format: int32
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
                League:
                  type: integer
                  format: int32
                Points:
                  type: integer
                  format: int32
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
                League:
                  type: integer
                  format: int32
                Points:
                  type: integer
                  format: int32
        $select:
          type: array
          example: ["Id", "Name", "League", "Points"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name,League,Points"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    Player:
      type: object
      required:
        - Name
        - Age
        - Team
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 50
        Age:
          type: integer
          format: int32
        Team:
          type: integer
          format: int32
    PlayerFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 50
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 50
                Age:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Team:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 50
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 50
                Age:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Team:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
                Age:
                Team:
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
                Age:
                  type: integer
                  format: int32
                Team:
                  type: integer
                  format: int32
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
                Age:
                  type: integer
                  format: int32
                Team:
                  type: integer
                  format: int32
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
                Age:
                  type: integer
                  format: int32
                Team:
                  type: integer
                  format: int32
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
                Age:
                  type: integer
                  format: int32
                Team:
                  type: integer
                  format: int32
        $select:
          type: array
          example: ["Id", "Name", "Age", "Team"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name,Age,Team"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    Match:
      type: object
      required:
        - Set1
        - Set2
        - Set3
      properties:
        Id:
          type: integer
          format: int32
        League:
          type: integer
          format: int32
        Winnerteam:
          type: integer
          format: int32
        Lostteam:
          type: integer
          format: int32
        Set1:
          type: string
          minLength: 0
          maxLength: 10
        Set2:
          type: string
          minLength: 0
          maxLength: 10
        Set3:
          type: string
          minLength: 0
          maxLength: 10
        Set4:
          type: string
          minLength: 0
          maxLength: 10
        Set5:
          type: string
          minLength: 0
          maxLength: 10
    MatchFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                League:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Winnerteam:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Lostteam:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Set1:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 10
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 10
                Set2:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 10
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 10
                Set3:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 10
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 10
                Set4:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 10
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 10
                Set5:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 10
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 10
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                League:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Winnerteam:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Lostteam:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Set1:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 10
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 10
                Set2:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 10
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 10
                Set3:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 10
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 10
                Set4:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 10
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 10
                Set5:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 10
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 10
            contains:
              type: object
              properties:
                Id:
                League:
                Winnerteam:
                Lostteam:
                Set1:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set2:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set3:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set4:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set5:
                  type: string
                  minLength: 0
                  maxLength: 10
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                League:
                  type: integer
                  format: int32
                Winnerteam:
                  type: integer
                  format: int32
                Lostteam:
                  type: integer
                  format: int32
                Set1:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set2:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set3:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set4:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set5:
                  type: string
                  minLength: 0
                  maxLength: 10
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                League:
                  type: integer
                  format: int32
                Winnerteam:
                  type: integer
                  format: int32
                Lostteam:
                  type: integer
                  format: int32
                Set1:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set2:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set3:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set4:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set5:
                  type: string
                  minLength: 0
                  maxLength: 10
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                League:
                  type: integer
                  format: int32
                Winnerteam:
                  type: integer
                  format: int32
                Lostteam:
                  type: integer
                  format: int32
                Set1:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set2:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set3:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set4:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set5:
                  type: string
                  minLength: 0
                  maxLength: 10
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                League:
                  type: integer
                  format: int32
                Winnerteam:
                  type: integer
                  format: int32
                Lostteam:
                  type: integer
                  format: int32
                Set1:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set2:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set3:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set4:
                  type: string
                  minLength: 0
                  maxLength: 10
                Set5:
                  type: string
                  minLength: 0
                  maxLength: 10
        $select:
          type: array
          example: ["Id", "League", "Winnerteam", "Lostteam", "Set1", "Set2", "Set3", "Set4", "Set5"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,League,Winnerteam,Lostteam,Set1,Set2,Set3,Set4,Set5"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    Coach:
      type: object
      required:
        - Name
        - Team
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 50
        Team:
          type: integer
          format: int32
    CoachFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 50
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 50
                Team:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 50
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 50
                Team:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
                Team:
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
                Team:
                  type: integer
                  format: int32
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
                Team:
                  type: integer
                  format: int32
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
                Team:
                  type: integer
                  format: int32
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 50
                Team:
                  type: integer
                  format: int32
        $select:
          type: array
          example: ["Id", "Name", "Team"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name,Team"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string